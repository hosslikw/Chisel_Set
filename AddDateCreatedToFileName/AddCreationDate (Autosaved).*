
--Created by: Kyle Hossli
--Created on: 2023-11-12

--Copyright Â© 2023 Posture, All Rights Reserved

--use AppleScript version "2.4" -- Yosemite (10.10) or later
--use scripting additions
--	This script appends an underscore to the file names that are passed to it, followed by the creation date of each file.
--	It functions as a quick action, taking the input of files and folders.
--	Before renaming the files, users are asked to choose the format they wish the date to appear in the file name.
--	Once the format is chosen, the date is written to the filename.
--	The following formats are offered:
--	1. YYYYMMDD (e.g. 20230408)
--	2. YYYY-MM-DD (e.g. 2023-04-28)
--	3. DD-MM-YYYY (e.g. 28-04-2023)
--	4. DDMMYYYY (e.g. 28-04-2023)
--	5. MM-DD-YYYY (e.g. 04-28-2023)
--	6. mmmm dd, yyyy (e.g. April 28, 2023)

on assigningVariables()
	set input to (choose file with prompt "Select Files:" with multiple selections allowed)
	set logSheetPath to (path to desktop folder as string) & "log_sheet.txt"
	repeat with aFile in input
		set chosenFile to aFile
		tell application "Finder"
			set filePath to (POSIX path of chosenFile)
			set nameOfFile to name of chosenFile
			set fileType to kind of chosenFile
			set extension to name extension of chosenFile
			if extension is not "" then
				set baseName to text 1 thru -((count extension) + 2) of nameOfFile
			else
				set baseName to nameOfFile
			end if
			try
				set dateValue to creation date of chosenFile
				set yearValue to year of dateValue
				set monthValue to month of dateValue as integer
				set dayValue to day of dateValue
				
				set yearString to text -4 thru -1 of ("0000" & yearValue)
				set monthString to text -2 thru -1 of ("00" & monthValue)
				set dayString to text -2 thru -1 of ("00" & dayValue)
				
			on error errMsg
				set dateValue to missing value
				set yearValue to missing value
				set monthValue to missing value
				set dayValue to missing value
				
				set yearString to ""
				set monthString to ""
				set dayString to ""
			end try
			
			--Determine if the file is invalid (an app or invisible file)
			tell application "System Events"
				if nameOfFile starts with "." or fileType is "Application" then
					display dialog "Invalid input: Invisible file or Application detected."
				end if
			end tell
			
			-- Rename the file using the chosen date format
			set chosenFormat to choose from list {"YYYYMMDD", "YYYY-MM-DD", "DD-MM-YYYY", "DDMMYYYY", "MM-DD-YYYY", "mmmm dd, yyyy"} with prompt "Choose the date format:"
			if chosenFormat is not false then
				set dateFormat to item 1 of chosenFormat
				if dateFormat is "YYYYMMDD" then
					set formattedDate to yearValue & monthValue & dayValue
				else if dateFormat is "YYYY-MM-DD" then
					set formattedDate to yearString & "-" & monthString & "-" & dayString
				else if dateFormat is "DD-MM-YYYY" then
					set formattedDate to dayString & "-" & monthString & "-" & yearString
				else if dateFormat is "DDMMYYYY" then
					set formattedDate to dayString & monthString & yearString
				else if dateFormat is "MM-DD-YYYY" then
					set formattedDate to monthString & "-" & dayString & "-" & yearString
				else if dateFormat is "mmmm dd, yyyy" then
					set formattedDate to text 1 thru -1 of ((month of dateValue) as string) & "_" & dayString & "_" & yearString
				end if
				
				-- Append the formatted date to the filename
				set newFileName to baseName & "_" & formattedDate & "." & extension
				set newPath to (container of chosenFile as string) & newFileName
				
				-- Rename the file
				try
					set name of chosenFile to newFileName
				on error errMsg
					-- Handle any error that occurs during renaming
					display alert "Error" message "An error occurred while renaming the file: " & errMsg buttons {"OK"} default button "OK"
				end try
			else
				-- User cancelled the format selection, do nothing
			end if
			
		end tell
	end repeat
end assigningVariables

-- Call the assigningVariables function to start the script
assigningVariables()

